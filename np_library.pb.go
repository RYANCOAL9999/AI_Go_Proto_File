// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.4
// source: lib/np_library.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NS Array kwargs with speical type.
type NDArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape []int32 `protobuf:"varint,1,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype float32 `protobuf:"fixed32,2,opt,name=dtype,proto3" json:"dtype,omitempty"`
	// Types that are assignable to Instrument:
	//	*NDArray_Buffer
	//	*NDArray_Offset
	//	*NDArray_Strides
	//	*NDArray_Order
	Instrument isNDArray_Instrument `protobuf_oneof:"instrument"`
}

func (x *NDArray) Reset() {
	*x = NDArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_np_library_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NDArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NDArray) ProtoMessage() {}

func (x *NDArray) ProtoReflect() protoreflect.Message {
	mi := &file_lib_np_library_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NDArray.ProtoReflect.Descriptor instead.
func (*NDArray) Descriptor() ([]byte, []int) {
	return file_lib_np_library_proto_rawDescGZIP(), []int{0}
}

func (x *NDArray) GetShape() []int32 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *NDArray) GetDtype() float32 {
	if x != nil {
		return x.Dtype
	}
	return 0
}

func (m *NDArray) GetInstrument() isNDArray_Instrument {
	if m != nil {
		return m.Instrument
	}
	return nil
}

func (x *NDArray) GetBuffer() *anypb.Any {
	if x, ok := x.GetInstrument().(*NDArray_Buffer); ok {
		return x.Buffer
	}
	return nil
}

func (x *NDArray) GetOffset() *anypb.Any {
	if x, ok := x.GetInstrument().(*NDArray_Offset); ok {
		return x.Offset
	}
	return nil
}

func (x *NDArray) GetStrides() *anypb.Any {
	if x, ok := x.GetInstrument().(*NDArray_Strides); ok {
		return x.Strides
	}
	return nil
}

func (x *NDArray) GetOrder() *anypb.Any {
	if x, ok := x.GetInstrument().(*NDArray_Order); ok {
		return x.Order
	}
	return nil
}

type isNDArray_Instrument interface {
	isNDArray_Instrument()
}

type NDArray_Buffer struct {
	Buffer *anypb.Any `protobuf:"bytes,3,opt,name=buffer,proto3,oneof"`
}

type NDArray_Offset struct {
	Offset *anypb.Any `protobuf:"bytes,4,opt,name=offset,proto3,oneof"`
}

type NDArray_Strides struct {
	Strides *anypb.Any `protobuf:"bytes,5,opt,name=strides,proto3,oneof"`
}

type NDArray_Order struct {
	Order *anypb.Any `protobuf:"bytes,6,opt,name=order,proto3,oneof"`
}

func (*NDArray_Buffer) isNDArray_Instrument() {}

func (*NDArray_Offset) isNDArray_Instrument() {}

func (*NDArray_Strides) isNDArray_Instrument() {}

func (*NDArray_Order) isNDArray_Instrument() {}

var File_lib_np_library_proto protoreflect.FileDescriptor

var file_lib_np_library_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6c, 0x69, 0x62, 0x2f, 0x6e, 0x70, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x41, 0x49, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x02, 0x0a, 0x07, 0x4e,
	0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x64, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lib_np_library_proto_rawDescOnce sync.Once
	file_lib_np_library_proto_rawDescData = file_lib_np_library_proto_rawDesc
)

func file_lib_np_library_proto_rawDescGZIP() []byte {
	file_lib_np_library_proto_rawDescOnce.Do(func() {
		file_lib_np_library_proto_rawDescData = protoimpl.X.CompressGZIP(file_lib_np_library_proto_rawDescData)
	})
	return file_lib_np_library_proto_rawDescData
}

var file_lib_np_library_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_lib_np_library_proto_goTypes = []interface{}{
	(*NDArray)(nil),   // 0: AIProto.NDArray
	(*anypb.Any)(nil), // 1: google.protobuf.Any
}
var file_lib_np_library_proto_depIdxs = []int32{
	1, // 0: AIProto.NDArray.buffer:type_name -> google.protobuf.Any
	1, // 1: AIProto.NDArray.offset:type_name -> google.protobuf.Any
	1, // 2: AIProto.NDArray.strides:type_name -> google.protobuf.Any
	1, // 3: AIProto.NDArray.order:type_name -> google.protobuf.Any
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_lib_np_library_proto_init() }
func file_lib_np_library_proto_init() {
	if File_lib_np_library_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lib_np_library_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NDArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lib_np_library_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*NDArray_Buffer)(nil),
		(*NDArray_Offset)(nil),
		(*NDArray_Strides)(nil),
		(*NDArray_Order)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lib_np_library_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lib_np_library_proto_goTypes,
		DependencyIndexes: file_lib_np_library_proto_depIdxs,
		MessageInfos:      file_lib_np_library_proto_msgTypes,
	}.Build()
	File_lib_np_library_proto = out.File
	file_lib_np_library_proto_rawDesc = nil
	file_lib_np_library_proto_goTypes = nil
	file_lib_np_library_proto_depIdxs = nil
}
