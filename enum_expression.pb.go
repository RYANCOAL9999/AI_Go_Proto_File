// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.4
// source: lib/enum_expression.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Penalty kwargs with enum type.
type Penalty int32

const (
	Penalty_PENALTY_L2         Penalty = 0
	Penalty_PENALTY_L1         Penalty = 1
	Penalty_PENALTY_ELASTICNET Penalty = 2
)

// Enum value maps for Penalty.
var (
	Penalty_name = map[int32]string{
		0: "PENALTY_L2",
		1: "PENALTY_L1",
		2: "PENALTY_ELASTICNET",
	}
	Penalty_value = map[string]int32{
		"PENALTY_L2":         0,
		"PENALTY_L1":         1,
		"PENALTY_ELASTICNET": 2,
	}
)

func (x Penalty) Enum() *Penalty {
	p := new(Penalty)
	*p = x
	return p
}

func (x Penalty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Penalty) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[0].Descriptor()
}

func (Penalty) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[0]
}

func (x Penalty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Penalty.Descriptor instead.
func (Penalty) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{0}
}

// Loss kwargs with enum type.
type Loss int32

const (
	Loss_LOSS_HINGE                       Loss = 0
	Loss_LOSS_LOG_LOSS                    Loss = 1
	Loss_LOSS_LOG                         Loss = 2
	Loss_LOSS_MODIFIED_HUBER              Loss = 3
	Loss_LOSS_SQUARED_HINGE               Loss = 4
	Loss_LOSS_PERCEPTRON                  Loss = 5
	Loss_LOSS_SQUARED_ERROR               Loss = 6
	Loss_LOSS_HUBER                       Loss = 7
	Loss_LOSS_EPSILON_INSENSITIVE         Loss = 8
	Loss_LOSS_SQUARED_EPSILON_INSENSITIVE Loss = 9
)

// Enum value maps for Loss.
var (
	Loss_name = map[int32]string{
		0: "LOSS_HINGE",
		1: "LOSS_LOG_LOSS",
		2: "LOSS_LOG",
		3: "LOSS_MODIFIED_HUBER",
		4: "LOSS_SQUARED_HINGE",
		5: "LOSS_PERCEPTRON",
		6: "LOSS_SQUARED_ERROR",
		7: "LOSS_HUBER",
		8: "LOSS_EPSILON_INSENSITIVE",
		9: "LOSS_SQUARED_EPSILON_INSENSITIVE",
	}
	Loss_value = map[string]int32{
		"LOSS_HINGE":                       0,
		"LOSS_LOG_LOSS":                    1,
		"LOSS_LOG":                         2,
		"LOSS_MODIFIED_HUBER":              3,
		"LOSS_SQUARED_HINGE":               4,
		"LOSS_PERCEPTRON":                  5,
		"LOSS_SQUARED_ERROR":               6,
		"LOSS_HUBER":                       7,
		"LOSS_EPSILON_INSENSITIVE":         8,
		"LOSS_SQUARED_EPSILON_INSENSITIVE": 9,
	}
)

func (x Loss) Enum() *Loss {
	p := new(Loss)
	*p = x
	return p
}

func (x Loss) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Loss) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[1].Descriptor()
}

func (Loss) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[1]
}

func (x Loss) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Loss.Descriptor instead.
func (Loss) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{1}
}

// Multi_Class kwargs with enum type.
type Multi_Class int32

const (
	Multi_Class_MULTI_CLASS_OVR            Multi_Class = 0
	Multi_Class_MULTI_CLASS_CRAMMER_SINGER Multi_Class = 1
)

// Enum value maps for Multi_Class.
var (
	Multi_Class_name = map[int32]string{
		0: "MULTI_CLASS_OVR",
		1: "MULTI_CLASS_CRAMMER_SINGER",
	}
	Multi_Class_value = map[string]int32{
		"MULTI_CLASS_OVR":            0,
		"MULTI_CLASS_CRAMMER_SINGER": 1,
	}
)

func (x Multi_Class) Enum() *Multi_Class {
	p := new(Multi_Class)
	*p = x
	return p
}

func (x Multi_Class) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Multi_Class) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[2].Descriptor()
}

func (Multi_Class) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[2]
}

func (x Multi_Class) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Multi_Class.Descriptor instead.
func (Multi_Class) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{2}
}

// Order kwargs with enum type.
type Order int32

const (
	Order_ORDER_C Order = 0
	Order_ORDER_F Order = 1
)

// Enum value maps for Order.
var (
	Order_name = map[int32]string{
		0: "ORDER_C",
		1: "ORDER_F",
	}
	Order_value = map[string]int32{
		"ORDER_C": 0,
		"ORDER_F": 1,
	}
)

func (x Order) Enum() *Order {
	p := new(Order)
	*p = x
	return p
}

func (x Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[3].Descriptor()
}

func (Order) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[3]
}

func (x Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order.Descriptor instead.
func (Order) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{3}
}

//Solver kwargs with enum type.
type Solver int32

const (
	Solver_SOLVER_AUTO            Solver = 0
	Solver_SOLVER_SVD             Solver = 1
	Solver_SOLVER_CHOLESKY        Solver = 2
	Solver_SOLVER_LSQR            Solver = 3
	Solver_SOLVER_SPARSE_CG       Solver = 4
	Solver_SOLVER_SAG             Solver = 5
	Solver_SOLVER_SAGA            Solver = 6
	Solver_SOLVER_LBFGS           Solver = 7
	Solver_SOLVER_NEWTON_CHOLESKY Solver = 8
)

// Enum value maps for Solver.
var (
	Solver_name = map[int32]string{
		0: "SOLVER_AUTO",
		1: "SOLVER_SVD",
		2: "SOLVER_CHOLESKY",
		3: "SOLVER_LSQR",
		4: "SOLVER_SPARSE_CG",
		5: "SOLVER_SAG",
		6: "SOLVER_SAGA",
		7: "SOLVER_LBFGS",
		8: "SOLVER_NEWTON_CHOLESKY",
	}
	Solver_value = map[string]int32{
		"SOLVER_AUTO":            0,
		"SOLVER_SVD":             1,
		"SOLVER_CHOLESKY":        2,
		"SOLVER_LSQR":            3,
		"SOLVER_SPARSE_CG":       4,
		"SOLVER_SAG":             5,
		"SOLVER_SAGA":            6,
		"SOLVER_LBFGS":           7,
		"SOLVER_NEWTON_CHOLESKY": 8,
	}
)

func (x Solver) Enum() *Solver {
	p := new(Solver)
	*p = x
	return p
}

func (x Solver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Solver) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[4].Descriptor()
}

func (Solver) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[4]
}

func (x Solver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Solver.Descriptor instead.
func (Solver) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{4}
}

// Selection kwargs with enum type.
type Selection int32

const (
	Selection_SELECTION_CYCLIC Selection = 0
	Selection_SELECTION_RANDOM Selection = 1
)

// Enum value maps for Selection.
var (
	Selection_name = map[int32]string{
		0: "SELECTION_CYCLIC",
		1: "SELECTION_RANDOM",
	}
	Selection_value = map[string]int32{
		"SELECTION_CYCLIC": 0,
		"SELECTION_RANDOM": 1,
	}
)

func (x Selection) Enum() *Selection {
	p := new(Selection)
	*p = x
	return p
}

func (x Selection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Selection) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[5].Descriptor()
}

func (Selection) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[5]
}

func (x Selection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Selection.Descriptor instead.
func (Selection) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{5}
}

// Algorithm kwargs with enum type.
type Algorithm int32

const (
	Algorithm_ALGORITHM_AUTO      Algorithm = 0
	Algorithm_ALGORITHM_BALL_TREE Algorithm = 1
	Algorithm_ALGORITHM_KD_TREE   Algorithm = 2
	Algorithm_ALGORITHM_BRUTE     Algorithm = 3
)

// Enum value maps for Algorithm.
var (
	Algorithm_name = map[int32]string{
		0: "ALGORITHM_AUTO",
		1: "ALGORITHM_BALL_TREE",
		2: "ALGORITHM_KD_TREE",
		3: "ALGORITHM_BRUTE",
	}
	Algorithm_value = map[string]int32{
		"ALGORITHM_AUTO":      0,
		"ALGORITHM_BALL_TREE": 1,
		"ALGORITHM_KD_TREE":   2,
		"ALGORITHM_BRUTE":     3,
	}
)

func (x Algorithm) Enum() *Algorithm {
	p := new(Algorithm)
	*p = x
	return p
}

func (x Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[6].Descriptor()
}

func (Algorithm) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[6]
}

func (x Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm.Descriptor instead.
func (Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{6}
}

// Link kwargs with enum type.
type Link int32

const (
	Link_LINK_AUTO     Link = 0
	Link_LINK_LOG      Link = 1
	Link_LINK_IDENTITY Link = 2
)

// Enum value maps for Link.
var (
	Link_name = map[int32]string{
		0: "LINK_AUTO",
		1: "LINK_LOG",
		2: "LINK_IDENTITY",
	}
	Link_value = map[string]int32{
		"LINK_AUTO":     0,
		"LINK_LOG":      1,
		"LINK_IDENTITY": 2,
	}
)

func (x Link) Enum() *Link {
	p := new(Link)
	*p = x
	return p
}

func (x Link) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Link) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_enum_expression_proto_enumTypes[7].Descriptor()
}

func (Link) Type() protoreflect.EnumType {
	return &file_lib_enum_expression_proto_enumTypes[7]
}

func (x Link) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Link.Descriptor instead.
func (Link) EnumDescriptor() ([]byte, []int) {
	return file_lib_enum_expression_proto_rawDescGZIP(), []int{7}
}

var File_lib_enum_expression_proto protoreflect.FileDescriptor

var file_lib_enum_expression_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6c, 0x69, 0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x41, 0x49, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x41, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x4c, 0x32, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x4c, 0x31, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x45, 0x4c, 0x41, 0x53, 0x54,
	0x49, 0x43, 0x4e, 0x45, 0x54, 0x10, 0x02, 0x2a, 0xe9, 0x01, 0x0a, 0x04, 0x4c, 0x6f, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x48, 0x49, 0x4e, 0x47, 0x45, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x4f, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x4f, 0x47, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x5f, 0x48, 0x55, 0x42, 0x45, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4f,
	0x53, 0x53, 0x5f, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x48, 0x49, 0x4e, 0x47, 0x45,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45,
	0x50, 0x54, 0x52, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4f, 0x53, 0x53, 0x5f,
	0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12,
	0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x48, 0x55, 0x42, 0x45, 0x52, 0x10, 0x07, 0x12,
	0x1c, 0x0a, 0x18, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x45, 0x50, 0x53, 0x49, 0x4c, 0x4f, 0x4e, 0x5f,
	0x49, 0x4e, 0x53, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x08, 0x12, 0x24, 0x0a,
	0x20, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x45, 0x50,
	0x53, 0x49, 0x4c, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x09, 0x2a, 0x42, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x5f, 0x4f, 0x56, 0x52, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x55, 0x4c, 0x54, 0x49,
	0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x43, 0x52, 0x41, 0x4d, 0x4d, 0x45, 0x52, 0x5f, 0x53,
	0x49, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x46, 0x10, 0x01, 0x2a, 0xb4, 0x01, 0x0a, 0x06, 0x53,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f,
	0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52,
	0x5f, 0x53, 0x56, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x4f, 0x4c, 0x45, 0x53, 0x4b, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4c, 0x53, 0x51, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x43, 0x47,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x41, 0x47,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x41, 0x47,
	0x41, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4c, 0x42,
	0x46, 0x47, 0x53, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f,
	0x4e, 0x45, 0x57, 0x54, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x4f, 0x4c, 0x45, 0x53, 0x4b, 0x59, 0x10,
	0x08, 0x2a, 0x37, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x59, 0x43, 0x4c,
	0x49, 0x43, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x01, 0x2a, 0x64, 0x0a, 0x09, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x47, 0x4f, 0x52,
	0x49, 0x54, 0x48, 0x4d, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x42, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x52,
	0x45, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48,
	0x4d, 0x5f, 0x4b, 0x44, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41,
	0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x42, 0x52, 0x55, 0x54, 0x45, 0x10, 0x03,
	0x2a, 0x36, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x02, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lib_enum_expression_proto_rawDescOnce sync.Once
	file_lib_enum_expression_proto_rawDescData = file_lib_enum_expression_proto_rawDesc
)

func file_lib_enum_expression_proto_rawDescGZIP() []byte {
	file_lib_enum_expression_proto_rawDescOnce.Do(func() {
		file_lib_enum_expression_proto_rawDescData = protoimpl.X.CompressGZIP(file_lib_enum_expression_proto_rawDescData)
	})
	return file_lib_enum_expression_proto_rawDescData
}

var file_lib_enum_expression_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_lib_enum_expression_proto_goTypes = []interface{}{
	(Penalty)(0),     // 0: AIProto.Penalty
	(Loss)(0),        // 1: AIProto.Loss
	(Multi_Class)(0), // 2: AIProto.Multi_Class
	(Order)(0),       // 3: AIProto.Order
	(Solver)(0),      // 4: AIProto.Solver
	(Selection)(0),   // 5: AIProto.Selection
	(Algorithm)(0),   // 6: AIProto.Algorithm
	(Link)(0),        // 7: AIProto.Link
}
var file_lib_enum_expression_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lib_enum_expression_proto_init() }
func file_lib_enum_expression_proto_init() {
	if File_lib_enum_expression_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lib_enum_expression_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lib_enum_expression_proto_goTypes,
		DependencyIndexes: file_lib_enum_expression_proto_depIdxs,
		EnumInfos:         file_lib_enum_expression_proto_enumTypes,
	}.Build()
	File_lib_enum_expression_proto = out.File
	file_lib_enum_expression_proto_rawDesc = nil
	file_lib_enum_expression_proto_goTypes = nil
	file_lib_enum_expression_proto_depIdxs = nil
}
